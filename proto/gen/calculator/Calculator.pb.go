// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.26.1
// source: calculator/Calculator.proto

package calcv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperandType int32

const (
	OperandType_int   OperandType = 0 // 2, 3, 4, 5 etc... (int64)
	OperandType_float OperandType = 1 // 2.3, 3.2, 4.123 etc... (float64)
)

// Enum value maps for OperandType.
var (
	OperandType_name = map[int32]string{
		0: "int",
		1: "float",
	}
	OperandType_value = map[string]int32{
		"int":   0,
		"float": 1,
	}
)

func (x OperandType) Enum() *OperandType {
	p := new(OperandType)
	*p = x
	return p
}

func (x OperandType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperandType) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_Calculator_proto_enumTypes[0].Descriptor()
}

func (OperandType) Type() protoreflect.EnumType {
	return &file_calculator_Calculator_proto_enumTypes[0]
}

func (x OperandType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperandType.Descriptor instead.
func (OperandType) EnumDescriptor() ([]byte, []int) {
	return file_calculator_Calculator_proto_rawDescGZIP(), []int{0}
}

type OperatorType int32

const (
	OperatorType_add OperatorType = 0 // +
	OperatorType_sub OperatorType = 1 // -
	OperatorType_mul OperatorType = 2 // *
	OperatorType_quo OperatorType = 3 // /
)

// Enum value maps for OperatorType.
var (
	OperatorType_name = map[int32]string{
		0: "add",
		1: "sub",
		2: "mul",
		3: "quo",
	}
	OperatorType_value = map[string]int32{
		"add": 0,
		"sub": 1,
		"mul": 2,
		"quo": 3,
	}
)

func (x OperatorType) Enum() *OperatorType {
	p := new(OperatorType)
	*p = x
	return p
}

func (x OperatorType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperatorType) Descriptor() protoreflect.EnumDescriptor {
	return file_calculator_Calculator_proto_enumTypes[1].Descriptor()
}

func (OperatorType) Type() protoreflect.EnumType {
	return &file_calculator_Calculator_proto_enumTypes[1]
}

func (x OperatorType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperatorType.Descriptor instead.
func (OperatorType) EnumDescriptor() ([]byte, []int) {
	return file_calculator_Calculator_proto_rawDescGZIP(), []int{1}
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerId int64 `protobuf:"varint,1,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_Calculator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_Calculator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_calculator_Calculator_proto_rawDescGZIP(), []int{0}
}

func (x *CreateRequest) GetOwnerId() int64 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId int64 `protobuf:"varint,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_Calculator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_Calculator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_calculator_Calculator_proto_rawDescGZIP(), []int{1}
}

func (x *CreateResponse) GetAgentId() int64 {
	if x != nil {
		return x.AgentId
	}
	return 0
}

type PublishRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int64          `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubexpressionId int64          `protobuf:"varint,2,opt,name=subexpression_id,json=subexpressionId,proto3" json:"subexpression_id,omitempty"`
	Subexpression   *SubExpression `protobuf:"bytes,3,opt,name=subexpression,proto3" json:"subexpression,omitempty"`
	TimeToCalc      int64          `protobuf:"varint,4,opt,name=time_to_calc,json=timeToCalc,proto3" json:"time_to_calc,omitempty"` // as specification says time.duration is int64 nanosecond count
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_Calculator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_Calculator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_calculator_Calculator_proto_rawDescGZIP(), []int{2}
}

func (x *PublishRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PublishRequest) GetSubexpressionId() int64 {
	if x != nil {
		return x.SubexpressionId
	}
	return 0
}

func (x *PublishRequest) GetSubexpression() *SubExpression {
	if x != nil {
		return x.Subexpression
	}
	return nil
}

func (x *PublishRequest) GetTimeToCalc() int64 {
	if x != nil {
		return x.TimeToCalc
	}
	return 0
}

type SubExpression struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LeftOperand      string       `protobuf:"bytes,1,opt,name=left_operand,json=leftOperand,proto3" json:"left_operand,omitempty"`
	LeftOperandType  OperandType  `protobuf:"varint,2,opt,name=left_operand_type,json=leftOperandType,proto3,enum=agent.OperandType" json:"left_operand_type,omitempty"`
	Op               OperatorType `protobuf:"varint,3,opt,name=op,proto3,enum=agent.OperatorType" json:"op,omitempty"` // op is operator (+ - / *)
	RightOperand     string       `protobuf:"bytes,4,opt,name=right_operand,json=rightOperand,proto3" json:"right_operand,omitempty"`
	RightOperandType OperandType  `protobuf:"varint,5,opt,name=right_operand_type,json=rightOperandType,proto3,enum=agent.OperandType" json:"right_operand_type,omitempty"`
}

func (x *SubExpression) Reset() {
	*x = SubExpression{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_Calculator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubExpression) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubExpression) ProtoMessage() {}

func (x *SubExpression) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_Calculator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubExpression.ProtoReflect.Descriptor instead.
func (*SubExpression) Descriptor() ([]byte, []int) {
	return file_calculator_Calculator_proto_rawDescGZIP(), []int{3}
}

func (x *SubExpression) GetLeftOperand() string {
	if x != nil {
		return x.LeftOperand
	}
	return ""
}

func (x *SubExpression) GetLeftOperandType() OperandType {
	if x != nil {
		return x.LeftOperandType
	}
	return OperandType_int
}

func (x *SubExpression) GetOp() OperatorType {
	if x != nil {
		return x.Op
	}
	return OperatorType_add
}

func (x *SubExpression) GetRightOperand() string {
	if x != nil {
		return x.RightOperand
	}
	return ""
}

func (x *SubExpression) GetRightOperandType() OperandType {
	if x != nil {
		return x.RightOperandType
	}
	return OperandType_int
}

type PublishResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId                  int64       `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SubExpressionId         int64       `protobuf:"varint,2,opt,name=subExpression_id,json=subExpressionId,proto3" json:"subExpression_id,omitempty"`
	ResultOfCalculation     string      `protobuf:"bytes,3,opt,name=result_of_calculation,json=resultOfCalculation,proto3" json:"result_of_calculation,omitempty"`
	ResultOfCalculationType OperandType `protobuf:"varint,4,opt,name=result_of_calculation_type,json=resultOfCalculationType,proto3,enum=agent.OperandType" json:"result_of_calculation_type,omitempty"`
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_Calculator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_Calculator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_calculator_Calculator_proto_rawDescGZIP(), []int{4}
}

func (x *PublishResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PublishResponse) GetSubExpressionId() int64 {
	if x != nil {
		return x.SubExpressionId
	}
	return 0
}

func (x *PublishResponse) GetResultOfCalculation() string {
	if x != nil {
		return x.ResultOfCalculation
	}
	return ""
}

func (x *PublishResponse) GetResultOfCalculationType() OperandType {
	if x != nil {
		return x.ResultOfCalculationType
	}
	return OperandType_int
}

var File_calculator_Calculator_proto protoreflect.FileDescriptor

var file_calculator_Calculator_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x22, 0x2a, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x2b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb2, 0x01,
	0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x62,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x75, 0x62, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x61, 0x6c, 0x63,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x43, 0x61,
	0x6c, 0x63, 0x22, 0x81, 0x02, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x65, 0x66, 0x74, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x65, 0x66, 0x74,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x11, 0x6c, 0x65, 0x66, 0x74, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x0f, 0x6c, 0x65, 0x66, 0x74, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x6e, 0x64, 0x12, 0x41, 0x0a, 0x12, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x52, 0x10, 0x72, 0x69, 0x67, 0x68, 0x74, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0xdb, 0x01, 0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73,
	0x75, 0x62, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x32,
	0x0a, 0x15, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4f, 0x66, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x1a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x6f, 0x66, 0x5f,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x52, 0x17, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x4f, 0x66, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x2a, 0x22, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x10, 0x01, 0x2a, 0x33, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x61, 0x64, 0x64,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x73, 0x75, 0x62, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x6d,
	0x75, 0x6c, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x71, 0x75, 0x6f, 0x10, 0x03, 0x32, 0x3e, 0x0a,
	0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x12, 0x14, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x40, 0x0a,
	0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x38, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x12, 0x15, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x16, 0x5a, 0x14, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x31,
	0x3b, 0x63, 0x61, 0x6c, 0x63, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculator_Calculator_proto_rawDescOnce sync.Once
	file_calculator_Calculator_proto_rawDescData = file_calculator_Calculator_proto_rawDesc
)

func file_calculator_Calculator_proto_rawDescGZIP() []byte {
	file_calculator_Calculator_proto_rawDescOnce.Do(func() {
		file_calculator_Calculator_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculator_Calculator_proto_rawDescData)
	})
	return file_calculator_Calculator_proto_rawDescData
}

var file_calculator_Calculator_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_calculator_Calculator_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_calculator_Calculator_proto_goTypes = []interface{}{
	(OperandType)(0),        // 0: agent.operand_type
	(OperatorType)(0),       // 1: agent.operator_type
	(*CreateRequest)(nil),   // 2: agent.CreateRequest
	(*CreateResponse)(nil),  // 3: agent.CreateResponse
	(*PublishRequest)(nil),  // 4: agent.PublishRequest
	(*SubExpression)(nil),   // 5: agent.SubExpression
	(*PublishResponse)(nil), // 6: agent.PublishResponse
}
var file_calculator_Calculator_proto_depIdxs = []int32{
	5, // 0: agent.PublishRequest.subexpression:type_name -> agent.SubExpression
	0, // 1: agent.SubExpression.left_operand_type:type_name -> agent.operand_type
	1, // 2: agent.SubExpression.op:type_name -> agent.operator_type
	0, // 3: agent.SubExpression.right_operand_type:type_name -> agent.operand_type
	0, // 4: agent.PublishResponse.result_of_calculation_type:type_name -> agent.operand_type
	2, // 5: agent.Agent.Create:input_type -> agent.CreateRequest
	4, // 6: agent.Task.Publish:input_type -> agent.PublishRequest
	3, // 7: agent.Agent.Create:output_type -> agent.CreateResponse
	6, // 8: agent.Task.Publish:output_type -> agent.PublishResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_calculator_Calculator_proto_init() }
func file_calculator_Calculator_proto_init() {
	if File_calculator_Calculator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calculator_Calculator_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_Calculator_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_Calculator_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_Calculator_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubExpression); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_Calculator_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculator_Calculator_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_calculator_Calculator_proto_goTypes,
		DependencyIndexes: file_calculator_Calculator_proto_depIdxs,
		EnumInfos:         file_calculator_Calculator_proto_enumTypes,
		MessageInfos:      file_calculator_Calculator_proto_msgTypes,
	}.Build()
	File_calculator_Calculator_proto = out.File
	file_calculator_Calculator_proto_rawDesc = nil
	file_calculator_Calculator_proto_goTypes = nil
	file_calculator_Calculator_proto_depIdxs = nil
}
